# Generated by Django 3.2.8 on 2021-10-26 09:26

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("hipeac", "0002_auto_20211025_1955"),
    ]

    operations = [
        migrations.CreateModel(
            name="Webinar",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("is_private", models.BooleanField(default=False)),
                ("start_at", models.DateTimeField(blank=True, null=True)),
                ("end_at", models.DateTimeField(blank=True, null=True)),
                ("title", models.CharField(max_length=250)),
                ("organizers", models.TextField(blank=True, null=True)),
                ("summary", models.TextField(blank=True, null=True)),
                ("program", models.TextField(blank=True, null=True)),
                ("keywords", models.JSONField(default=list, editable=False)),
                (
                    "application_areas",
                    models.CharField(
                        blank=True,
                        max_length=250,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^\\d+(?:,\\d+)*\\Z"),
                                code="invalid",
                                message="Enter only digits separated by commas.",
                            )
                        ],
                    ),
                ),
                (
                    "topics",
                    models.CharField(
                        blank=True,
                        max_length=250,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^\\d+(?:,\\d+)*\\Z"),
                                code="invalid",
                                message="Enter only digits separated by commas.",
                            )
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("zoom_webinar_id", models.CharField(blank=True, max_length=32, null=True)),
                ("zoom_attendee_report", models.FileField(blank=True, null=True, upload_to="private/zoom")),
                (
                    "event",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="webinars",
                        to="hipeac.event",
                    ),
                ),
                (
                    "institutions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="webinars",
                        related_query_name="hipeac_webinars",
                        to="hipeac.Institution",
                    ),
                ),
                (
                    "main_speaker",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="main_webinars",
                        related_query_name="hipeac_webinars",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "projects",
                    models.ManyToManyField(
                        blank=True, related_name="webinars", related_query_name="hipeac_webinars", to="hipeac.Project"
                    ),
                ),
                (
                    "session_type",
                    models.ForeignKey(
                        limit_choices_to={"type": "session_type"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="webinars_session_type",
                        to="hipeac.metadata",
                    ),
                ),
                (
                    "speakers",
                    models.ManyToManyField(
                        blank=True,
                        related_name="webinars",
                        related_query_name="hipeac_webinars",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.RemoveField(
            model_name="session",
            name="zoom_attendee_report",
        ),
        migrations.RemoveField(
            model_name="session",
            name="zoom_webinar_id",
        ),
        migrations.AlterField(
            model_name="session",
            name="institutions",
            field=models.ManyToManyField(
                blank=True, related_name="sessions", related_query_name="hipeac_sessions", to="hipeac.Institution"
            ),
        ),
        migrations.AlterField(
            model_name="session",
            name="main_speaker",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="main_sessions",
                related_query_name="hipeac_sessions",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="session",
            name="projects",
            field=models.ManyToManyField(
                blank=True, related_name="sessions", related_query_name="hipeac_sessions", to="hipeac.Project"
            ),
        ),
        migrations.AlterField(
            model_name="session",
            name="session_type",
            field=models.ForeignKey(
                limit_choices_to={"type": "session_type"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="sessions_session_type",
                to="hipeac.metadata",
            ),
        ),
        migrations.AlterField(
            model_name="session",
            name="speakers",
            field=models.ManyToManyField(
                blank=True, related_name="sessions", related_query_name="hipeac_sessions", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AlterField(
            model_name="sessionaccesslink",
            name="user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="access_links",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="WebinarRegistration",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("access_link", models.URLField(max_length=500, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="webinar_registrations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("webinar", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="hipeac.webinar")),
            ],
            options={
                "db_table": "hipeac_webinar_registration",
                "ordering": ("-created_at",),
            },
        ),
        migrations.AddIndex(
            model_name="webinarregistration",
            index=models.Index(fields=["uuid"], name="hipeac_webi_uuid_aed0ab_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="webinarregistration",
            unique_together={("webinar", "user")},
        ),
    ]

# Generated by Django 4.0.3 on 2022-04-26 09:11

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import hipeac.functions
import hipeac.models.countries
import hipeac.models.files
import hipeac.models.mixins
import hipeac.validators
import uuid

from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
        ("flatpages", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AcacesBus",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "destination",
                    models.CharField(
                        choices=[("home", "Back home"), ("acaces", "Summer School")], default="acaces", max_length=8
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                ("position", models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "ACACES bus",
                "verbose_name_plural": "ACACES buses",
                "db_table": "hipeac_acaces_bus",
                "ordering": ("event", "destination", "position"),
            },
        ),
        migrations.CreateModel(
            name="AcacesCourse",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("slot", models.PositiveSmallIntegerField(blank=True, null=True)),
                ("title", models.CharField(max_length=250)),
                ("overview", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "ACACES course",
                "db_table": "hipeac_acaces_course",
                "ordering": ("event", "slot", "title"),
            },
        ),
        migrations.CreateModel(
            name="AcacesCourseSession",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("start_at", models.DateTimeField(blank=True, null=True)),
                ("end_at", models.DateTimeField(blank=True, null=True)),
                (
                    "max_attendees",
                    models.PositiveSmallIntegerField(default=0, help_text="Leave on `0` for non limiting."),
                ),
                ("zoom_webinar_id", models.CharField(blank=True, max_length=32, null=True)),
                ("zoom_attendee_report", models.FileField(blank=True, null=True, upload_to="private/zoom")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("overview", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "hipeac_acaces_course_session",
                "ordering": ("course", "start_at"),
            },
        ),
        migrations.CreateModel(
            name="AcacesGrant",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("country", django_countries.fields.CountryField(db_index=True, max_length=2)),
                ("available_grants", models.PositiveIntegerField(default=0)),
            ],
            options={
                "verbose_name": "ACACES grant",
                "db_table": "hipeac_acaces_grant",
                "ordering": ("event", "country"),
            },
        ),
        migrations.CreateModel(
            name="AcacesHotel",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("code", models.CharField(max_length=3)),
                ("name", models.CharField(max_length=128)),
                ("available_rooms", models.PositiveSmallIntegerField()),
            ],
            options={
                "verbose_name": "ACACES hotel",
                "db_table": "hipeac_acaces_hotel",
            },
        ),
        migrations.CreateModel(
            name="AcacesPoster",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(blank=True, max_length=250, null=True)),
                ("authors", models.CharField(blank=True, max_length=250, null=True)),
                ("abstract", models.FileField(blank=True, null=True, upload_to="public/acaces/abstract")),
                ("poster", models.FileField(blank=True, null=True, upload_to="public/acaces/poster")),
                ("position", models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "hipeac_acaces_poster",
                "ordering": ("position",),
            },
        ),
        migrations.CreateModel(
            name="ActionPoint",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("discarded", "Discarded"),
                            ("not_started", "Not started"),
                            ("in_progress", "In progress"),
                            ("completed", "Completed"),
                            ("finalized", "Finalized"),
                        ],
                        default="UN",
                        max_length=16,
                    ),
                ),
                ("title", models.TextField()),
                ("description", models.TextField(blank=True, null=True)),
                ("progress", models.TextField(blank=True, null=True, verbose_name="Progress description")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Steering Committee action point",
                "db_table": "hipeac_steering_action_point",
                "ordering": ("-id",),
            },
        ),
        migrations.CreateModel(
            name="ApplicationArea",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("object_id", models.PositiveIntegerField()),
            ],
            options={
                "db_table": "hipeac_rel_application_area",
                "ordering": ("application_area__position",),
            },
        ),
        migrations.CreateModel(
            name="Article",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("is_ready", models.BooleanField(default=False)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("blog", "HiPEAC Blog"),
                            ("news", "HiPEAC News"),
                            ("release", "HiPEAC Press Release"),
                            ("jobs", "HiPEAC Career News"),
                        ],
                        default="news",
                        max_length=7,
                    ),
                ),
                ("publication_date", models.DateField()),
                ("title", models.CharField(max_length=250)),
                ("excerpt", models.TextField()),
                ("content", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "hipeac_comm_article",
                "ordering": ("-publication_date",),
            },
        ),
        migrations.CreateModel(
            name="Block",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("key", models.CharField(max_length=48)),
                ("notes", models.CharField(blank=True, max_length=255)),
                ("header", models.TextField(blank=True)),
                ("content", models.TextField()),
            ],
            options={
                "verbose_name": "page block",
                "db_table": "hipeac_site_block",
                "ordering": ("page", "key"),
            },
        ),
        migrations.CreateModel(
            name="Break",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "type",
                    models.CharField(
                        choices=[("coffee", "Coffee break"), ("lunch", "Lunch break")], default="coffee", max_length=16
                    ),
                ),
                ("start_at", models.DateTimeField(blank=True, null=True)),
                ("end_at", models.DateTimeField(blank=True, null=True)),
                ("notes", models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                "db_table": "hipeac_event_break",
                "ordering": ("event", "start_at"),
            },
        ),
        migrations.CreateModel(
            name="Clipping",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("general", "General"),
                            ("jobs", "Jobs"),
                            ("internships", "PhD Internships"),
                            ("industry", "Industry"),
                            ("innovation", "Innovation community"),
                            ("csw", "Computing Systems Week"),
                            ("conference", "HiPEAC Conference"),
                            ("acaces", "ACACES"),
                            ("vision", "HiPEAC Vision"),
                            ("roadshow", "HiPEAC Roadshow"),
                            ("collaborations", "Collaboration Grants"),
                        ],
                        max_length=16,
                        null=True,
                    ),
                ),
                ("media", models.CharField(max_length=250)),
                ("title", models.CharField(max_length=250)),
                ("url", models.URLField()),
                ("publication_date", models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                "db_table": "hipeac_comm_clipping",
                "ordering": ("-publication_date",),
            },
        ),
        migrations.CreateModel(
            name="Committee",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=250)),
                ("position", models.PositiveSmallIntegerField()),
            ],
            options={
                "db_table": "hipeac_event_committee",
                "ordering": ("position",),
            },
        ),
        migrations.CreateModel(
            name="ConferenceSponsor",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "sponsorship_type",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "Gold"), (2, "Silver"), (3, "Bronze"), (9, "Academic")], default=3
                    ),
                ),
                ("amount", models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                "db_table": "hipeac_conference_sponsor",
                "ordering": ("sponsorship_type", "-amount", "institution__name"),
            },
        ),
        migrations.CreateModel(
            name="Coupon",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("code", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "value",
                    models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1)]),
                ),
                ("notes", models.CharField(blank=True, max_length=190, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "hipeac_event_coupon",
                "ordering": ("event", "id"),
            },
        ),
        migrations.CreateModel(
            name="Dissemination",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("general", "General"),
                            ("jobs", "Jobs"),
                            ("internships", "PhD Internships"),
                            ("industry", "Industry"),
                            ("innovation", "Innovation community"),
                            ("csw", "Computing Systems Week"),
                            ("conference", "HiPEAC Conference"),
                            ("acaces", "ACACES"),
                            ("vision", "HiPEAC Vision"),
                            ("roadshow", "HiPEAC Roadshow"),
                            ("collaborations", "Collaboration Grants"),
                        ],
                        max_length=16,
                        null=True,
                    ),
                ),
                ("date", models.DateField()),
                ("event", models.CharField(max_length=250)),
                ("country", django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ("description", models.TextField(blank=True)),
                ("external_url", models.URLField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Dissemination event",
                "db_table": "hipeac_comm_dissemination",
                "ordering": ("-date",),
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("type", models.CharField(editable=False, max_length=16)),
                (
                    "is_virtual",
                    models.BooleanField(default=False, help_text="Is it a virtual event?", verbose_name="virtual"),
                ),
                (
                    "city",
                    models.CharField(blank=True, help_text="Empty for virtual events.", max_length=100, null=True),
                ),
                (
                    "country",
                    django_countries.fields.CountryField(
                        blank=True, db_index=True, help_text="Empty for virtual events.", max_length=2, null=True
                    ),
                ),
                ("slug", models.SlugField(editable=False, max_length=32)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("registration_start_date", models.DateField()),
                ("registration_early_deadline", models.DateTimeField(blank=True, null=True)),
                ("registration_deadline", models.DateTimeField()),
                ("is_ready", models.BooleanField(default=False, help_text="Is programme ready?")),
                ("registrations_count", models.PositiveIntegerField(default=0)),
                ("hashtag", models.CharField(blank=True, max_length=32, null=True)),
                ("presentation", models.TextField(blank=True, null=True)),
                ("logistics", models.TextField(blank=True, null=True)),
                ("wbs_element", models.CharField(blank=True, max_length=32, null=True, verbose_name="WBS element")),
                ("ingenico_salt", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "allows_invoices",
                    models.BooleanField(default=True, help_text="If unchecked users cannot request an invoice."),
                ),
                ("payments_activation", models.DateField(blank=True, null=True)),
                (
                    "image",
                    models.FileField(
                        blank=True,
                        help_text="4:1 format",
                        null=True,
                        upload_to=hipeac.functions.get_images_path,
                        verbose_name="Banner",
                    ),
                ),
            ],
            options={
                "ordering": ("-start_date",),
            },
            bases=(hipeac.models.mixins.ImageMixin, models.Model),
        ),
        migrations.CreateModel(
            name="File",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("object_id", models.PositiveIntegerField()),
                ("type", models.CharField(choices=[("public", "Public"), ("private", "Private")], max_length=8)),
                ("file", models.FileField(upload_to=hipeac.models.files.get_upload_path)),
                ("position", models.PositiveSmallIntegerField(default=0)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "hipeac_rel_file",
                "ordering": ("content_type", "object_id", "position"),
            },
        ),
        migrations.CreateModel(
            name="HipeacPartner",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("description", models.TextField(blank=True, null=True)),
                ("position", models.PositiveSmallIntegerField(default=0)),
                ("tasks", models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                "db_table": "hipeac_self_partner",
                "ordering": ("hipeac", "position"),
            },
        ),
        migrations.CreateModel(
            name="Image",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("object_id", models.PositiveIntegerField()),
                ("image", models.FileField(blank=True, null=True, upload_to="public/images", verbose_name="Image")),
                ("position", models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                "db_table": "hipeac_rel_image",
                "ordering": ("content_type", "object_id", "position"),
            },
        ),
        migrations.CreateModel(
            name="Institution",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=190)),
                ("local_name", models.CharField(blank=True, max_length=190, null=True)),
                ("colloquial_name", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("university", "University"),
                            ("lab", "Government Lab"),
                            ("innovation", "Innovation Center"),
                            ("industry", "Industry"),
                            ("sme", "SME"),
                            ("other", "Other"),
                        ],
                        max_length=16,
                    ),
                ),
                ("location", models.CharField(blank=True, max_length=100, null=True)),
                ("country", django_countries.fields.CountryField(db_index=True, max_length=2)),
                (
                    "description",
                    models.TextField(blank=True, null=True, validators=[hipeac.validators.validate_no_badwords]),
                ),
                ("recruitment_contact", models.CharField(blank=True, max_length=190, null=True)),
                ("recruitment_email", models.EmailField(blank=True, max_length=254, null=True)),
                (
                    "image",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=hipeac.functions.get_images_path,
                        validators=[django.core.validators.FileExtensionValidator(allowed_extensions=["png"])],
                        verbose_name="logo",
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ("name",),
            },
            bases=(hipeac.models.mixins.EditorMixin, hipeac.models.mixins.ImageMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Job",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "keywords",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=190), blank=True, default=list, editable=False, size=None
                    ),
                ),
                ("title", models.CharField(max_length=250, validators=[hipeac.validators.validate_no_badwords])),
                ("description", models.TextField(validators=[hipeac.validators.validate_no_badwords])),
                ("location", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "country",
                    django_countries.fields.CountryField(
                        blank=True,
                        countries=hipeac.models.countries.HipeacCountries,
                        db_index=True,
                        max_length=2,
                        null=True,
                    ),
                ),
                ("deadline", models.DateField(null=True)),
                ("positions", models.PositiveSmallIntegerField(default=1, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("share", models.BooleanField(default=True, editable=False)),
                ("add_to_euraxess", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("processed_at", models.DateTimeField(editable=False, null=True)),
                ("reminder_sent_for", models.DateField(blank=True, editable=False, null=True)),
                ("evaluation_sent_for", models.DateField(blank=True, editable=False, null=True)),
            ],
            options={
                "ordering": ("-id",),
            },
            bases=(hipeac.models.mixins.EditorMixin, models.Model),
        ),
        migrations.CreateModel(
            name="JobEvaluation",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "value",
                    models.SmallIntegerField(choices=[(0, "No"), (2, "Yes"), (1, "Yes, via the HiPEAC Jobs portal!")]),
                ),
                ("comments", models.TextField(blank=True, null=True)),
                ("selected_candidate", models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                "db_table": "hipeac_job_evaluation",
            },
            bases=(hipeac.models.mixins.EditorMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Link",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("object_id", models.PositiveIntegerField()),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("website", "Website"),
                            ("dblp", "DBLP"),
                            ("linkedin", "LinkedIn"),
                            ("github", "GitHub"),
                            ("twitter", "Twitter"),
                            ("youtube", "YouTube"),
                            ("easychair", "EasyChair"),
                            ("cordis", "Cordis"),
                            ("google_maps", "Google Maps"),
                            ("google_photos", "Google Photos"),
                            ("zoom", "Zoom.us"),
                            ("other", "Other"),
                        ],
                        max_length=32,
                    ),
                ),
                ("url", models.URLField()),
            ],
            options={
                "db_table": "hipeac_rel_link",
                "ordering": ("-type",),
            },
        ),
        migrations.CreateModel(
            name="Magazine",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=250)),
                ("publication_date", models.DateField(default=django.utils.timezone.now)),
                ("file", models.FileField(blank=True, null=True, upload_to="private/magazine")),
                ("issuu_url", models.URLField(blank=True, null=True)),
                ("downloads", models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                "db_table": "hipeac_comm_magazine",
                "ordering": ("-publication_date",),
            },
        ),
        migrations.CreateModel(
            name="MagazineRecipient",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255)),
                ("address_line1", models.CharField(blank=True, max_length=255)),
                ("address_line2", models.CharField(blank=True, max_length=255)),
                ("postal_code", models.CharField(blank=True, max_length=255)),
                ("city", models.CharField(blank=True, max_length=255)),
                ("country", django_countries.fields.CountryField(blank=True, max_length=2)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("is_active", models.BooleanField(default=True)),
                ("send_electronic", models.BooleanField(default=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "hipeac_comm_magazine_recipient",
            },
        ),
        migrations.CreateModel(
            name="MailingList",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("code", models.CharField(max_length=160)),
                ("password", models.CharField(max_length=160)),
                ("query", models.TextField()),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "db_table": "hipeac_sympa",
                "ordering": ("code",),
            },
        ),
        migrations.CreateModel(
            name="Meeting",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("start_at", models.DateTimeField()),
                ("end_at", models.DateTimeField()),
                ("location", models.CharField(max_length=250)),
                ("description", models.TextField()),
                ("url_webex", models.URLField(blank=True, null=True)),
                ("minutes", models.FileField(blank=True, null=True, upload_to="private/steering/meeting")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Steering Committee meeting",
                "db_table": "hipeac_steering_meeting",
                "ordering": ("-start_at",),
            },
        ),
        migrations.CreateModel(
            name="Membership",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "keywords",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=190), blank=True, default=list, editable=False, size=None
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("member", "Member"),
                            ("associated_member", "Associated member"),
                            ("affiliated_member", "Affiliated member"),
                            ("affiliated_phd", "Affiliated PhD"),
                        ],
                        db_index=True,
                        max_length=20,
                        null=True,
                    ),
                ),
                ("date", models.DateField()),
                ("revocation_date", models.DateField(blank=True, null=True)),
                ("comments", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "hipeac_membership",
                "ordering": ("date",),
            },
        ),
        migrations.CreateModel(
            name="MembershipRequest",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=250)),
                ("affiliation", models.CharField(blank=True, max_length=250, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("website", models.URLField(blank=True, null=True)),
                ("motivation", models.TextField(blank=True, null=True)),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "membership_type",
                    models.CharField(
                        blank=True,
                        choices=[("member", "Member"), ("member,non-eu", "Associated member")],
                        db_index=True,
                        max_length=16,
                        null=True,
                    ),
                ),
                ("accepted", models.BooleanField(default=None, null=True)),
                ("decision_date", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "hipeac_membership_request",
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="Metadata",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("gender", "Gender"),
                            ("title", "Title"),
                            ("meal_preference", "Meal preference"),
                            ("job_position", "Position"),
                            ("employment_type", "Employment type"),
                            ("application_area", "Application area"),
                            ("session_type", "Session type"),
                            ("topic", "Topic"),
                            ("project_programme", "EU project programme"),
                        ],
                        max_length=32,
                    ),
                ),
                ("value", models.CharField(max_length=64)),
                ("euraxess_value", models.CharField(blank=True, max_length=250, null=True)),
                ("position", models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                "ordering": ("type", "value"),
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("category", models.CharField(db_index=True, max_length=32, verbose_name="category")),
                ("object_id", models.PositiveIntegerField(null=True)),
                ("data", models.JSONField(verbose_name="value")),
                ("deadline", models.DateTimeField(null=True, verbose_name="deadline")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Page",
            fields=[
                (
                    "flatpage_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="flatpages.flatpage",
                    ),
                ),
            ],
            options={
                "db_table": "hipeac_site_page",
            },
            bases=("flatpages.flatpage",),
        ),
        migrations.CreateModel(
            name="Permission",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("object_id", models.IntegerField()),
                (
                    "level",
                    models.PositiveSmallIntegerField(
                        choices=[(9, "Owner"), (5, "Administrator"), (1, "Guest")], db_index=True
                    ),
                ),
            ],
            options={
                "db_table": "hipeac_rel_permission",
            },
        ),
        migrations.CreateModel(
            name="PhdMobility",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "type",
                    models.CharField(
                        choices=[("internship", "Internship"), ("collaboration", "Collaboration")],
                        default="internship",
                        max_length=16,
                    ),
                ),
                ("title", models.CharField(max_length=250)),
                ("summary", models.TextField()),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("location", models.CharField(help_text="Where will the PhD student be working?", max_length=250)),
                ("country", django_countries.fields.CountryField(max_length=2)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "PhD mobility",
                "verbose_name_plural": "PhD mobilities",
                "db_table": "hipeac_phd_mobility",
                "ordering": ("-start_date",),
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="profile",
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("country", django_countries.fields.CountryField(db_index=True, max_length=2)),
                ("bio", models.TextField(blank=True, null=True)),
                (
                    "image",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=hipeac.functions.get_images_path,
                        validators=[django.core.validators.FileExtensionValidator(allowed_extensions=["jpg"])],
                        verbose_name="Avatar",
                    ),
                ),
                ("is_bouncing", models.BooleanField(default=False)),
                ("is_subscribed", models.BooleanField(default=False)),
                ("is_public", models.BooleanField(default=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "abstract": False,
            },
            bases=(hipeac.models.mixins.ImageMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "keywords",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=190), blank=True, default=list, editable=False, size=None
                    ),
                ),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("acronym", models.CharField(max_length=50)),
                ("name", models.CharField(max_length=250)),
                (
                    "description",
                    models.TextField(blank=True, null=True, validators=[hipeac.validators.validate_no_badwords]),
                ),
                (
                    "image",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=hipeac.functions.get_images_path,
                        validators=[django.core.validators.FileExtensionValidator(allowed_extensions=["png"])],
                        verbose_name="logo",
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ("acronym",),
            },
            bases=(hipeac.models.mixins.EditorMixin, hipeac.models.mixins.ImageMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Publication",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("year", models.PositiveSmallIntegerField(db_index=True)),
                ("title", models.TextField()),
                ("authors_string", models.TextField(verbose_name="Full authors string from DBLP")),
                ("dblp_key", models.CharField(max_length=200, unique=True)),
                ("url", models.URLField(blank=True, null=True, verbose_name="Electronic edition")),
                ("itemtype", models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                "ordering": ("-year", "title"),
            },
        ),
        migrations.CreateModel(
            name="PublicationConference",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "acronym",
                    models.CharField(
                        choices=[
                            (
                                "ASPLOS",
                                "Conference on Architectural Support for Programming Languages and Operating Systems",
                            ),
                            ("DAC", "Design Automation Conference"),
                            ("FCCM", "Symposium on Field-Programmable Custom Computing Machines"),
                            ("HPCA", "International Symposium on High Performance Computer Architecture"),
                            ("ISCA", "International Symposium on Computer Architecture"),
                            ("MICRO", "Symposium on Microarchitecture"),
                            ("PLDI", "Conference on Programming Language Design and Implementation"),
                            ("POPL", "Symposium on Principles of Programming Languages"),
                        ],
                        max_length=16,
                    ),
                ),
                ("year", models.PositiveSmallIntegerField(db_index=True)),
                ("country", django_countries.fields.CountryField(max_length=2)),
                ("url", models.URLField(verbose_name="DBLP event page")),
            ],
            options={
                "db_table": "hipeac_publication_conference",
                "ordering": ("-year", "acronym"),
            },
        ),
        migrations.CreateModel(
            name="Quote",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("general", "General"),
                            ("jobs", "Jobs"),
                            ("internships", "PhD Internships"),
                            ("industry", "Industry"),
                            ("innovation", "Innovation community"),
                            ("csw", "Computing Systems Week"),
                            ("conference", "HiPEAC Conference"),
                            ("acaces", "ACACES"),
                            ("vision", "HiPEAC Vision"),
                            ("roadshow", "HiPEAC Roadshow"),
                            ("collaborations", "Collaboration Grants"),
                        ],
                        max_length=16,
                        null=True,
                    ),
                ),
                ("text", models.TextField()),
                ("author", models.CharField(max_length=250)),
                ("is_featured", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "hipeac_comm_quote",
            },
        ),
        migrations.CreateModel(
            name="Registration",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("base_fee", models.PositiveSmallIntegerField(default=0, editable=False)),
                ("extra_fees", models.PositiveSmallIntegerField(default=0, editable=False)),
                ("manual_extra_fees", models.PositiveSmallIntegerField(default=0)),
                ("paid", models.PositiveSmallIntegerField(default=0, verbose_name="Paid online")),
                (
                    "paid_via_invoice",
                    models.PositiveSmallIntegerField(default=0, verbose_name="Amount paid via invoice"),
                ),
                ("saldo", models.IntegerField(default=0)),
                ("invoice_requested", models.BooleanField(default=False)),
                ("invoice_sent", models.BooleanField(default=False)),
                ("visa_requested", models.BooleanField(default=False)),
                ("visa_sent", models.BooleanField(default=False)),
                (
                    "coupon",
                    models.OneToOneField(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="hipeac.coupon"
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="registrations", to="hipeac.event"
                    ),
                ),
            ],
            options={
                "db_table": "hipeac_event_registration",
                "ordering": ("-id",),
            },
        ),
        migrations.CreateModel(
            name="Roadshow",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("name", models.CharField(max_length=250)),
                ("description", models.TextField(verbose_name="Presentation")),
                ("country", django_countries.fields.CountryField(max_length=2)),
            ],
            options={
                "ordering": ("-start_date",),
            },
        ),
        migrations.CreateModel(
            name="Room",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=190)),
                ("max_capacity", models.PositiveSmallIntegerField(default=0)),
                ("position", models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                "db_table": "hipeac_event_venue_room",
                "ordering": ("position",),
            },
        ),
        migrations.CreateModel(
            name="Session",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "keywords",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=190), blank=True, default=list, editable=False, size=None
                    ),
                ),
                ("start_at", models.DateTimeField(blank=True, null=True)),
                ("end_at", models.DateTimeField(blank=True, null=True)),
                (
                    "max_attendees",
                    models.PositiveSmallIntegerField(default=0, help_text="Leave on `0` for non limiting."),
                ),
                ("zoom_webinar_id", models.CharField(blank=True, max_length=32, null=True)),
                ("zoom_attendee_report", models.FileField(blank=True, null=True, upload_to="private/zoom")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_private", models.BooleanField(default=False)),
                ("title", models.CharField(max_length=250)),
                ("organizers", models.TextField(blank=True, null=True)),
                ("summary", models.TextField(blank=True, null=True)),
                ("program", models.TextField(blank=True, null=True)),
                ("extra_attendees_fee", models.PositiveSmallIntegerField(default=0)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="sessions", to="hipeac.event"
                    ),
                ),
                (
                    "main_speaker",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="hipeac.room"
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        limit_choices_to={"type": "session_type"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="hipeac.metadata",
                    ),
                ),
            ],
            options={
                "db_table": "hipeac_event_session",
                "ordering": ("start_at",),
            },
            bases=(hipeac.models.mixins.EditorMixin, models.Model),
        ),
        migrations.CreateModel(
            name="TechTransferApplication",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=250)),
                ("description", models.TextField(verbose_name="Description of the technology being transferred")),
                (
                    "partners_description",
                    models.TextField(verbose_name="Description of the academic partners and the company involved"),
                ),
                ("value", models.TextField(verbose_name="Estimate of the value of the agreement")),
                ("team_string", models.TextField(blank=True, null=True, verbose_name="Team (text)")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "applicant",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="tech_transfer_applications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "hipeac_tech_transfer_application",
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="TechTransferCall",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                (
                    "is_frozen",
                    models.BooleanField(
                        default=False, help_text="Check this box to avoid further editing on applications."
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "hipeac_tech_transfer_call",
                "ordering": ("-start_date",),
            },
        ),
        migrations.CreateModel(
            name="Venue",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=160)),
                ("city", models.CharField(blank=True, max_length=160, null=True)),
                ("country", django_countries.fields.CountryField(blank=True, db_index=True, max_length=2, null=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "hipeac_event_venue",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Vision",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=250)),
                ("introduction", models.TextField(null=True)),
                ("summary", models.TextField(null=True)),
                ("publication_date", models.DateField(default=django.utils.timezone.now)),
                ("file_draft", models.FileField(blank=True, null=True, upload_to="private/vision")),
                ("file", models.FileField(blank=True, null=True, upload_to="private/vision")),
                ("flyer", models.FileField(blank=True, null=True, upload_to="public/vision")),
                ("downloads", models.PositiveIntegerField(default=0)),
            ],
            options={
                "verbose_name": "Vision document",
                "ordering": ("-publication_date",),
            },
        ),
        migrations.CreateModel(
            name="Webinar",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "keywords",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=190), blank=True, default=list, editable=False, size=None
                    ),
                ),
                ("start_at", models.DateTimeField(blank=True, null=True)),
                ("end_at", models.DateTimeField(blank=True, null=True)),
                (
                    "max_attendees",
                    models.PositiveSmallIntegerField(default=0, help_text="Leave on `0` for non limiting."),
                ),
                ("zoom_webinar_id", models.CharField(blank=True, max_length=32, null=True)),
                ("zoom_attendee_report", models.FileField(blank=True, null=True, upload_to="private/zoom")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_private", models.BooleanField(default=False)),
                ("title", models.CharField(max_length=250)),
                ("organizers", models.TextField(blank=True, null=True)),
                ("summary", models.TextField(blank=True, null=True)),
                ("program", models.TextField(blank=True, null=True)),
                (
                    "main_speaker",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        limit_choices_to={"type": "session_type"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="hipeac.metadata",
                    ),
                ),
            ],
            options={
                "db_table": "hipeac_webinar",
            },
        ),
        migrations.CreateModel(
            name="Acaces",
            fields=[
                (
                    "event_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="hipeac.event",
                    ),
                ),
                ("fee", models.PositiveIntegerField(default=0)),
                ("shared_room_discount", models.PositiveIntegerField(default=0)),
                ("grant_request_deadline", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "ACACES summer school",
            },
            bases=("hipeac.event",),
        ),
        migrations.CreateModel(
            name="AcacesRegistration",
            fields=[
                (
                    "registration_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="hipeac.registration",
                    ),
                ),
                (
                    "status",
                    models.PositiveSmallIntegerField(
                        choices=[(0, "Pending"), (1, "Admitted"), (5, "In waiting list"), (9, "Rejected")], default=0
                    ),
                ),
                ("accepted", models.BooleanField(null=True, verbose_name="accepted by user")),
                (
                    "custom_data",
                    models.JSONField(blank=True, default=dict, help_text="It can be used to update user's profile."),
                ),
                (
                    "history",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(), blank=True, default=list, size=None
                    ),
                ),
                ("motivation", models.TextField(blank=True, null=True)),
                ("grant_requested", models.BooleanField(default=False)),
                ("grant_assigned", models.BooleanField(null=True)),
                ("roommate_requested", models.BooleanField(default=False)),
                ("roommate_notes", models.CharField(blank=True, max_length=190, null=True)),
                ("arrival_flight", models.CharField(blank=True, max_length=190, null=True)),
                ("departure_flight", models.CharField(blank=True, max_length=190, null=True)),
                ("phone_number", models.CharField(blank=True, max_length=20, null=True)),
                ("gelato", models.BooleanField(default=False, editable=False)),
            ],
            options={
                "verbose_name": "ACACES registration",
                "db_table": "hipeac_acaces_registration",
            },
            bases=("hipeac.registration",),
        ),
        migrations.CreateModel(
            name="Conference",
            fields=[
                (
                    "event_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="hipeac.event",
                    ),
                ),
                ("fee", models.PositiveIntegerField(default=0)),
                ("early_fee", models.PositiveIntegerField(default=0)),
                ("student_fee", models.PositiveIntegerField(default=0)),
                ("early_student_fee", models.PositiveIntegerField(default=0)),
                ("booth_fee", models.PositiveIntegerField(default=0)),
            ],
            options={
                "abstract": False,
            },
            bases=("hipeac.event",),
        ),
        migrations.CreateModel(
            name="ConferenceRegistration",
            fields=[
                (
                    "registration_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="hipeac.registration",
                    ),
                ),
                (
                    "fee_type",
                    models.CharField(
                        choices=[("regular", "Regular"), ("student", "Student")], default="regular", max_length=8
                    ),
                ),
                ("with_booth", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Conference registration",
                "db_table": "hipeac_conference_registration",
            },
            bases=("hipeac.registration",),
        ),
        migrations.CreateModel(
            name="Csw",
            fields=[
                (
                    "event_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="hipeac.event",
                    ),
                ),
            ],
            options={
                "verbose_name": "CSW",
            },
            bases=("hipeac.event",),
        ),
        migrations.CreateModel(
            name="CswRegistration",
            fields=[
                (
                    "registration_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="hipeac.registration",
                    ),
                ),
            ],
            options={
                "verbose_name": "CSW registration",
                "db_table": "hipeac_csw_registration",
            },
            bases=("hipeac.registration",),
        ),
        migrations.CreateModel(
            name="Hipeac",
            fields=[
                (
                    "project_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="hipeac.project",
                    ),
                ),
                ("is_visible", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "hipeac_self",
            },
            bases=("hipeac.project",),
        ),
        migrations.CreateModel(
            name="InvitationLetter",
            fields=[
                (
                    "registration",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="letter",
                        serialize=False,
                        to="hipeac.registration",
                    ),
                ),
                ("name", models.CharField(max_length=190)),
                ("passport_number", models.CharField(max_length=60)),
                ("nationality", models.CharField(max_length=190)),
                ("birthdate", models.DateField(blank=True, null=True)),
                ("address", models.TextField()),
                (
                    "submitted",
                    models.CharField(
                        blank=True,
                        choices=[("paper", "Paper"), ("poster", "Poster")],
                        default=None,
                        max_length=16,
                        null=True,
                    ),
                ),
                ("submitted_title", models.TextField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "hipeac_event_invitation_letter",
            },
        ),
        migrations.CreateModel(
            name="WebinarRegistration",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("zoom_access_link", models.URLField(max_length=500)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_registrations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "webinar",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="registrations", to="hipeac.webinar"
                    ),
                ),
            ],
            options={
                "db_table": "hipeac_webinar_registration",
            },
        ),
        migrations.CreateModel(
            name="VisionArticle",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=250)),
                ("authors", models.CharField(blank=True, max_length=250, null=True)),
                ("dimension", models.CharField(blank=True, max_length=250, null=True)),
                ("position", models.PositiveSmallIntegerField()),
                ("abstract", models.TextField(blank=True, null=True)),
                ("downloads", models.PositiveIntegerField(default=0)),
                ("doi_url", models.URLField()),
                (
                    "vision",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="articles", to="hipeac.vision"
                    ),
                ),
            ],
            options={
                "db_table": "hipeac_vision_article",
                "ordering": ("position",),
            },
        ),
        migrations.CreateModel(
            name="Video",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("general", "General"),
                            ("jobs", "Jobs"),
                            ("internships", "PhD Internships"),
                            ("industry", "Industry"),
                            ("innovation", "Innovation community"),
                            ("csw", "Computing Systems Week"),
                            ("conference", "HiPEAC Conference"),
                            ("acaces", "ACACES"),
                            ("vision", "HiPEAC Vision"),
                            ("roadshow", "HiPEAC Roadshow"),
                            ("collaborations", "Collaboration Grants"),
                        ],
                        max_length=16,
                        null=True,
                    ),
                ),
                ("title", models.CharField(max_length=250)),
                ("publication_date", models.DateField()),
                ("youtube_id", models.CharField(max_length=40, unique=True, verbose_name="YouTube ID")),
                ("is_expert", models.BooleanField(default=True)),
                ("shows_on_homepage", models.BooleanField(default=False)),
                (
                    "event",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="videos",
                        to="hipeac.event",
                    ),
                ),
            ],
            options={
                "db_table": "hipeac_comm_video",
            },
        ),
        migrations.CreateModel(
            name="TopScientist",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("ranking", models.PositiveSmallIntegerField()),
                ("country", django_countries.fields.CountryField(max_length=2)),
                ("country_ranking", models.PositiveSmallIntegerField()),
                ("name", models.CharField(max_length=255)),
                ("affiliation", models.CharField(blank=True, max_length=255, null=True)),
                ("h_index", models.PositiveSmallIntegerField(blank=True, null=True)),
                ("citations", models.PositiveIntegerField(blank=True, null=True)),
                ("publications", models.PositiveIntegerField(blank=True, null=True)),
                ("url", models.URLField()),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="top_scientist",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "hipeac_top_scientist",
                "ordering": ("ranking",),
            },
        ),
        migrations.CreateModel(
            name="Topic",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("object_id", models.PositiveIntegerField()),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="topics",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "topic",
                    models.ForeignKey(
                        limit_choices_to={"type": "topic"},
                        on_delete=django.db.models.deletion.CASCADE,
                        to="hipeac.metadata",
                    ),
                ),
            ],
            options={
                "db_table": "hipeac_rel_topic",
                "ordering": ("topic__position",),
            },
        ),
        migrations.CreateModel(
            name="TechTransferAward",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "summary",
                    models.TextField(
                        blank=True, help_text="Summary to show online.", null=True, verbose_name="Summary"
                    ),
                ),
                (
                    "application",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="award",
                        to="hipeac.techtransferapplication",
                    ),
                ),
                (
                    "awardee",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="tech_transfer_award",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "origin_institution",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="originated_tech_transfers",
                        to="hipeac.institution",
                    ),
                ),
                (
                    "recipient_institution",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="received_tech_transfers",
                        to="hipeac.institution",
                    ),
                ),
            ],
            options={
                "db_table": "hipeac_tech_transfer_award",
            },
        ),
        migrations.AddField(
            model_name="techtransferapplication",
            name="call",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="applications", to="hipeac.techtransfercall"
            ),
        ),
        migrations.CreateModel(
            name="SessionProposal",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("first_name", models.CharField(max_length=250)),
                ("last_name", models.CharField(max_length=250)),
                ("email", models.EmailField(max_length=254)),
                ("title", models.CharField(max_length=250)),
                ("organizers", models.TextField()),
                ("summary", models.TextField()),
                ("projects", models.TextField(blank=True, null=True)),
                ("workshop_deadlines", models.TextField(blank=True, null=True)),
                ("tutorial_biblio", models.TextField(blank=True, null=True)),
                ("duration", models.CharField(max_length=250)),
                ("session_format", models.CharField(blank=True, max_length=250, null=True)),
                ("expected_attendees", models.CharField(max_length=250)),
                ("room_configuration", models.CharField(max_length=250)),
                ("previous_editions", models.TextField(blank=True, null=True)),
                ("other", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="session_proposals", to="hipeac.event"
                    ),
                ),
            ],
            options={
                "db_table": "hipeac_event_session_proposal",
            },
        ),
        migrations.CreateModel(
            name="SessionAccessLink",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("url", models.URLField(max_length=500)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="access_links", to="hipeac.session"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="access_links",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "hipeac_event_session_link",
            },
        ),
        migrations.AddField(
            model_name="room",
            name="venue",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="rooms", to="hipeac.venue"
            ),
        ),
        migrations.CreateModel(
            name="RelatedVideo",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("object_id", models.PositiveIntegerField()),
                ("position", models.PositiveSmallIntegerField(default=0)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="videos",
                        to="contenttypes.contenttype",
                    ),
                ),
                ("video", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="hipeac.video")),
            ],
            options={
                "db_table": "hipeac_rel_video",
                "ordering": ("content_type", "object_id", "position"),
            },
        ),
        migrations.CreateModel(
            name="RelatedUser",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("object_id", models.PositiveIntegerField()),
                ("position", models.PositiveSmallIntegerField(default=0)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="speakers",
                        to="contenttypes.contenttype",
                    ),
                ),
                ("user", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                "db_table": "hipeac_rel_user",
                "ordering": ("content_type", "object_id"),
            },
        ),
        migrations.CreateModel(
            name="RelatedProject",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("object_id", models.PositiveIntegerField()),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projects",
                        to="contenttypes.contenttype",
                    ),
                ),
                ("project", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="hipeac.project")),
            ],
            options={
                "db_table": "hipeac_rel_project",
                "ordering": ("content_type", "object_id", "project__acronym"),
            },
        ),
        migrations.CreateModel(
            name="RelatedInstitution",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("object_id", models.PositiveIntegerField()),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="institutions",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "institution",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="hipeac.institution"),
                ),
            ],
            options={
                "db_table": "hipeac_rel_institution",
                "ordering": ("content_type", "object_id", "institution__name"),
            },
        ),
        migrations.CreateModel(
            name="RegistrationLog",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "registration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="logs", to="hipeac.registration"
                    ),
                ),
                (
                    "session",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="hipeac.session",
                    ),
                ),
            ],
            options={
                "db_table": "hipeac_event_registration_log",
            },
        ),
        migrations.AddField(
            model_name="registration",
            name="sessions",
            field=models.ManyToManyField(blank=True, related_name="registrations", to="hipeac.session"),
        ),
        migrations.AddField(
            model_name="registration",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_registrations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddIndex(
            model_name="quote",
            index=models.Index(fields=["type"], name="hipeac_comm_type_310dbc_idx"),
        ),
        migrations.AddField(
            model_name="publication",
            name="conference",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="publications",
                to="hipeac.publicationconference",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="communication_officer",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="communicating_projects",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="coordinating_institution",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="coordinated_projects",
                to="hipeac.institution",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="coordinator",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="coordinated_projects",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="programme",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"type": "project_programme"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="project_project_programme",
                to="hipeac.metadata",
            ),
        ),
        migrations.AddField(
            model_name="profile",
            name="gender",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"type": "gender"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="gender",
                to="hipeac.metadata",
            ),
        ),
        migrations.AddField(
            model_name="profile",
            name="institution",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="profiles",
                to="hipeac.institution",
            ),
        ),
        migrations.AddField(
            model_name="profile",
            name="meal_preference",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"type": "meal_preference"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="user_meal_preference",
                to="hipeac.metadata",
            ),
        ),
        migrations.AddField(
            model_name="profile",
            name="position",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"type": "job_position"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="user_job_position",
                to="hipeac.metadata",
            ),
        ),
        migrations.AddField(
            model_name="profile",
            name="second_institution",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="second_profiles",
                to="hipeac.institution",
            ),
        ),
        migrations.AddField(
            model_name="profile",
            name="title",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"type": "title"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="user_title",
                to="hipeac.metadata",
            ),
        ),
        migrations.AddField(
            model_name="phdmobility",
            name="institution",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="phd_mobilities",
                to="hipeac.institution",
            ),
        ),
        migrations.AddField(
            model_name="phdmobility",
            name="job",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="phd_mobilities",
                to="hipeac.job",
            ),
        ),
        migrations.AddField(
            model_name="phdmobility",
            name="student",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="phd_mobilities", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="permission",
            name="content_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="perms", to="contenttypes.contenttype"
            ),
        ),
        migrations.AddField(
            model_name="permission",
            name="user",
            field=models.ForeignKey(
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="perms",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="notifications",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddIndex(
            model_name="metadata",
            index=models.Index(fields=["type"], name="hipeac_meta_type_f3ab48_idx"),
        ),
        migrations.AddField(
            model_name="membershiprequest",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="membership_requests",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="membership",
            name="advisor",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"memberships__type": "member"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="affiliates",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="membership",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="memberships", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="magazinerecipient",
            name="user",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="address",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="magazine",
            name="event",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="magazines",
                to="hipeac.event",
            ),
        ),
        migrations.AddField(
            model_name="link",
            name="content_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="links", to="contenttypes.contenttype"
            ),
        ),
        migrations.AddField(
            model_name="jobevaluation",
            name="job",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, related_name="evaluation", to="hipeac.job"
            ),
        ),
        migrations.AddField(
            model_name="jobevaluation",
            name="selected_user",
            field=models.ForeignKey(
                blank=True,
                help_text="Internal use only.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="selected_jobs",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="job",
            name="career_levels",
            field=models.ManyToManyField(
                limit_choices_to={"type": "job_position"}, related_name="career_levels", to="hipeac.metadata"
            ),
        ),
        migrations.AddField(
            model_name="job",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="posted_jobs",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="job",
            name="employment_type",
            field=models.ForeignKey(
                limit_choices_to={"type": "employment_type"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="employment_type",
                to="hipeac.metadata",
            ),
        ),
        migrations.AddField(
            model_name="job",
            name="institution",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, related_name="jobs", to="hipeac.institution"
            ),
        ),
        migrations.AddField(
            model_name="job",
            name="project",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="jobs",
                to="hipeac.project",
            ),
        ),
        migrations.AddField(
            model_name="institution",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="children",
                to="hipeac.institution",
            ),
        ),
        migrations.AddField(
            model_name="image",
            name="content_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="images", to="contenttypes.contenttype"
            ),
        ),
        migrations.AddField(
            model_name="hipeacpartner",
            name="institution",
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to="hipeac.institution"),
        ),
        migrations.AddField(
            model_name="hipeacpartner",
            name="representative",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="as_representative",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="file",
            name="content_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="files", to="contenttypes.contenttype"
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="coordinating_institution",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_coordinated",
                to="hipeac.institution",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="venue",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="events",
                to="hipeac.venue",
            ),
        ),
        migrations.AddField(
            model_name="coupon",
            name="event",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="coupons", to="hipeac.event"
            ),
        ),
        migrations.AddField(
            model_name="conferencesponsor",
            name="institution",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sponsored_conferences",
                to="hipeac.institution",
            ),
        ),
        migrations.AddField(
            model_name="conferencesponsor",
            name="project",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sponsored_conferences",
                to="hipeac.project",
            ),
        ),
        migrations.AddField(
            model_name="committee",
            name="event",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="committees", to="hipeac.event"
            ),
        ),
        migrations.AddField(
            model_name="break",
            name="event",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="breaks", to="hipeac.event"
            ),
        ),
        migrations.AddField(
            model_name="block",
            name="page",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="blocks", to="hipeac.page"
            ),
        ),
        migrations.AddField(
            model_name="article",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="authored_articles",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="article",
            name="event",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="articles",
                to="hipeac.event",
            ),
        ),
        migrations.AddField(
            model_name="applicationarea",
            name="application_area",
            field=models.ForeignKey(
                limit_choices_to={"type": "application_area"},
                on_delete=django.db.models.deletion.CASCADE,
                to="hipeac.metadata",
            ),
        ),
        migrations.AddField(
            model_name="applicationarea",
            name="content_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="application_areas",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="acacescoursesession",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="sessions", to="hipeac.acacescourse"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="webinarregistration",
            unique_together={("webinar", "user")},
        ),
        migrations.AlterUniqueTogether(
            name="topic",
            unique_together={("content_type", "object_id", "topic")},
        ),
        migrations.AlterUniqueTogether(
            name="relateduser",
            unique_together={("content_type", "object_id", "user")},
        ),
        migrations.AlterUniqueTogether(
            name="relatedproject",
            unique_together={("content_type", "object_id", "project")},
        ),
        migrations.AlterUniqueTogether(
            name="relatedinstitution",
            unique_together={("content_type", "object_id", "institution")},
        ),
        migrations.AlterUniqueTogether(
            name="registrationlog",
            unique_together={("registration", "session")},
        ),
        migrations.AlterUniqueTogether(
            name="registration",
            unique_together={("event", "user")},
        ),
        migrations.AlterUniqueTogether(
            name="permission",
            unique_together={("content_type", "object_id", "user")},
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(fields=["category", "user", "object_id"], name="hipeac_noti_categor_ffe850_idx"),
        ),
        migrations.AddField(
            model_name="hipeacpartner",
            name="hipeac",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="partners", to="hipeac.hipeac"
            ),
        ),
        migrations.AddIndex(
            model_name="file",
            index=models.Index(fields=["file"], name="hipeac_rel__file_f0f1e7_idx"),
        ),
        migrations.AddIndex(
            model_name="coupon",
            index=models.Index(fields=["code"], name="hipeac_even_code_4e506b_idx"),
        ),
        migrations.AddField(
            model_name="conferencesponsor",
            name="conference",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="sponsors", to="hipeac.conference"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="block",
            unique_together={("page", "key")},
        ),
        migrations.AlterUniqueTogether(
            name="applicationarea",
            unique_together={("content_type", "object_id", "application_area")},
        ),
        migrations.AddField(
            model_name="acacesregistration",
            name="arrival_bus",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"destination": "acaces"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="registrations_arriving",
                to="hipeac.acacesbus",
            ),
        ),
        migrations.AddField(
            model_name="acacesregistration",
            name="assigned_hotel",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="registrations",
                to="hipeac.acaceshotel",
            ),
        ),
        migrations.AddField(
            model_name="acacesregistration",
            name="courses",
            field=models.ManyToManyField(blank=True, related_name="registrations", to="hipeac.acacescourse"),
        ),
        migrations.AddField(
            model_name="acacesregistration",
            name="departure_bus",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"destination": "home"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="registrations_departing",
                to="hipeac.acacesbus",
            ),
        ),
        migrations.AddField(
            model_name="acacesregistration",
            name="roommate",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="hipeac.acacesregistration"
            ),
        ),
        migrations.AddField(
            model_name="acacesposter",
            name="registration",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, related_name="poster", to="hipeac.acacesregistration"
            ),
        ),
        migrations.AddField(
            model_name="acaceshotel",
            name="event",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="hotels", to="hipeac.acaces"
            ),
        ),
        migrations.AddField(
            model_name="acacesgrant",
            name="event",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="grants", to="hipeac.acaces"
            ),
        ),
        migrations.AddField(
            model_name="acacescourse",
            name="event",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="courses", to="hipeac.acaces"
            ),
        ),
        migrations.AddField(
            model_name="acacesbus",
            name="event",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="buses", to="hipeac.acaces"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="acacesgrant",
            unique_together={("event", "country")},
        ),
    ]

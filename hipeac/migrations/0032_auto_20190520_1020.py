# Generated by Django 2.1.7 on 2019-05-20 08:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import hipeac.functions


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("hipeac", "0031_event_is_ready"),
    ]

    operations = [
        migrations.CreateModel(
            name="Application",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("OK", "Accepted"),
                            ("NO", "Rejected"),
                            ("UN", "Pending"),
                            ("BY", "Retired (after being accepted)"),
                        ],
                        default="UN",
                        max_length=2,
                    ),
                ),
                ("rank", models.PositiveSmallIntegerField(blank=True, null=True)),
                (
                    "advisor_string",
                    models.CharField(
                        blank=True,
                        help_text="Fill in only if advisor is not in the dropdown list.",
                        max_length=250,
                        null=True,
                        verbose_name="Advisor (alt)",
                    ),
                ),
                (
                    "host_string",
                    models.CharField(
                        blank=True,
                        help_text="Fill in only if host is not in the dropdown list.",
                        max_length=250,
                        null=True,
                        verbose_name="Host (alt)",
                    ),
                ),
                (
                    "host_institution_string",
                    models.CharField(
                        blank=True,
                        help_text="Fill in only if host institution is not in the dropdown list.",
                        max_length=250,
                        null=True,
                        verbose_name="Host institution (alt)",
                    ),
                ),
                ("title", models.CharField(max_length=250, verbose_name="Title for the collaboration")),
                ("description", models.TextField(verbose_name="Goals of the project")),
                (
                    "statement",
                    models.TextField(
                        help_text="Has there been research collaboration between the institutions before?",
                        verbose_name="About the collaboration",
                    ),
                ),
                (
                    "project_file",
                    models.FileField(
                        blank=True, help_text="Maximum 1 page!", null=True, upload_to=hipeac.functions.get_asset_path
                    ),
                ),
                (
                    "start_date",
                    models.DateField(
                        blank=True, help_text="YYYY-MM-DD", null=True, verbose_name="Estimated start date"
                    ),
                ),
                (
                    "end_date",
                    models.DateField(blank=True, help_text="YYYY-MM-DD", null=True, verbose_name="Estimated end date"),
                ),
                ("notes", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "cv_file",
                    models.FileField(
                        blank=True,
                        help_text="This file will only be visible for the application reviewers.",
                        null=True,
                        upload_to=hipeac.functions.get_asset_path,
                        verbose_name="Curriculum Vitae",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "summary",
                    models.TextField(blank=True, help_text="Summary sent by the student to HiPEAC.", null=True),
                ),
                (
                    "advisor",
                    models.ForeignKey(
                        blank=True,
                        help_text="Applicant's advisor or manager.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="managed_collaborations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Call",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("ASSIGN", "Assigning reviewers"), ("REVIEW", "Reviewing"), ("CLOSED", "Closed")],
                        default="ASSIGN",
                        help_text='Once a Call is "Closed" no further editing is posible on applications or reviews.',
                        max_length=6,
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="managed_collaboration_calls",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reviewers",
                    models.ManyToManyField(
                        limit_choices_to={"membership_type__isnull": False},
                        related_name="reviewed_collaboration_calls",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"ordering": ("-start_date",)},
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "track_record",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "---"),
                            (4, "Weak"),
                            (8, "Average"),
                            (12, "Good"),
                            (16, "Very good"),
                            (20, "Excellent"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "publication_rate",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "---"),
                            (4, "Very unlikely"),
                            (8, "Unlikely"),
                            (12, "Possibly"),
                            (16, "Likely"),
                            (20, "Very Likely"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "destination",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "---"),
                            (2, "Weak"),
                            (4, "Average"),
                            (6, "Good"),
                            (8, "Very good"),
                            (10, "Excellent"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "member_status",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "---"),
                            (1, "None"),
                            (5, "Both partners"),
                            (8, "Member + partner"),
                            (10, "Both members"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "linkage",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "---"),
                            (1, "Existing Collaboration"),
                            (5, "More or less new collaboration"),
                            (10, "Totally new collaboration"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "independence",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "---"),
                            (1, "Not independent"),
                            (5, "Rather independent"),
                            (10, "Very independent"),
                        ],
                        default=0,
                    ),
                ),
                ("sum", models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ("comments", models.TextField(blank=True, null=True, verbose_name="Private comments for reviewers")),
                ("feedback", models.TextField(blank=True, null=True, verbose_name="Feedback for student")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "application",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="reviews", to="hipeac.Application"
                    ),
                ),
                (
                    "reviewer",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="collaboration_reviews",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"ordering": ("-created_at",)},
        ),
        migrations.AddField(
            model_name="application",
            name="call",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="applications", to="hipeac.Call"
            ),
        ),
        migrations.AddField(
            model_name="application",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="collaborations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="application",
            name="host",
            field=models.ForeignKey(
                blank=True,
                help_text="Host in the collaborating institution.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="hosted_collaborations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="application",
            name="host_institution",
            field=models.ForeignKey(
                blank=True,
                help_text="Collaborating institution.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="hosted_collaborations",
                to="hipeac.Institution",
            ),
        ),
        migrations.AddField(
            model_name="application",
            name="institution",
            field=models.ForeignKey(
                blank=True,
                help_text="Applicant's institution.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="collaborations",
                to="hipeac.Institution",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="review",
            unique_together={("application", "reviewer")},
        ),
    ]
